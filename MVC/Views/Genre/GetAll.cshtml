@model MVC.ViewModels.GenreViewModel

@{
    ViewData["Title"] = "List of Genres";
    var searchTerm = Context.Request.Query["searchTerm"].ToString();
    var hasSearchTerm = !string.IsNullOrEmpty(searchTerm);

    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
    var hasNextPage = ViewBag.HasNextPage ?? false;
    var hasPreviousPage = ViewBag.HasPreviousPage ?? false;
}

<div class="container mt-4">
    <!-- Add Genre Form -->
    <div class="row justify-content-center mb-4">
        <div class="col-10 col-lg-8">
            <h2 class="text-center mb-4">Add New Genre</h2>
            
            <form asp-action="Create" method="post" class="bg-light p-4 rounded">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="mb-2">
                    <label for="Name" class="form-label">Genre Name</label>
                    <input type="text" class="form-control" id="Name" asp-for="Name" required />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="d-flex justify-content-between">
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-plus"></i> Add Genre
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Genre List -->
    <div class="row justify-content-center">
        <div class="col-10 col-lg-8">
            <h2 class="text-center mb-4">List of Genres</h2>

            <!-- Search Form -->
            <form asp-controller="Genre" asp-action="Search" method="get" class="mb-2" id="searchForm">
                <div class="input-group">
                    <input type="text" name="searchTerm" class="form-control" placeholder="Search genres..." value="@searchTerm" />
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i>
                    </button>
                    @if (hasSearchTerm)
                    {
                        <a asp-controller="Genre" asp-action="GetAll" class="btn btn-outline-secondary">
                            <i class="fas fa-times"></i>
                        </a>
                    }
                </div>
            </form>

            @if (ViewBag.Genres != null && ((IEnumerable<dynamic>)ViewBag.Genres).Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Name</th>
                                @if (User.IsInRole("Admin"))
                                {
                                    <th class="text-end">Actions</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var genre in ViewBag.Genres)
                            {
                                <tr>
                                    <td class="align-middle">@genre.Name</td>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <td class="text-end">
                                            <div class="btn-group btn-group-sm" role="group">
                                                <a asp-controller="Genre" asp-action="Update" asp-route-id="@genre.Id" class="btn btn-outline-warning">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                                <a asp-controller="Genre" asp-action="Delete" asp-route-id="@genre.Id" 
                                                   class="btn btn-outline-danger" 
                                                   onclick="return confirm('Are you sure you want to delete this genre?');">
                                                    <i class="bi bi-trash"></i>
                                                </a>
                                            </div>
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @if (totalPages > 1)
                {
                    <nav aria-label="Genre pagination" class="mt-0">
                        <ul class="pagination justify-content-center flex-wrap">
                            <li class="page-item @(!hasPreviousPage ? "disabled" : "")">
                                <a class="page-link" 
                                   href="@Url.Action("GetAll", new { page = currentPage - 1, searchTerm = searchTerm })" 
                                   tabindex="-1">
                                    <i class="bi bi-chevron-left"></i>
                                </a>
                            </li>

                            @for (var i = 1; i <= totalPages; i++)
                            {
                                if (i == 1 || i == totalPages || (i >= currentPage - 2 && i <= currentPage + 2))
                                {
                                    <li class="page-item @(i == currentPage ? "active" : "")">
                                        <a class="page-link" 
                                           href="@Url.Action("GetAll", new { page = i, searchTerm = searchTerm })">@i</a>
                                    </li>
                                }
                                else if (i == currentPage - 3 || i == currentPage + 3)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }
                            }

                            <li class="page-item @(!hasNextPage ? "disabled" : "")">
                                <a class="page-link" 
                                   href="@Url.Action("GetAll", new { page = currentPage + 1, searchTerm = searchTerm })">
                                    <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="alert alert-info text-center">
                    @if (hasSearchTerm)
                    {
                        <p>No genres found matching your search.</p>
                        <a asp-controller="Genre" asp-action="GetAll" class="btn btn-outline-primary btn-sm">Show all</a>
                    }
                    else
                    {
                        <p>No genres have been added yet.</p>
                    }
                </div>
            }
        </div>
    </div>
</div>

<style>
    /* Responsive table adjustments */
    .table-responsive {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }
    
    /* Form styling */
    .bg-light {
        background-color: #f8f9fa !important;
    }
    
    .rounded {
        border-radius: 0.375rem !important;
    }
    
    /* Button spacing */
    .btn-group-sm > .btn {
        padding: 0.25rem 0.5rem;
    }
    
    /* Pagination responsiveness */
    .pagination {
        flex-wrap: wrap;
    }
    
    .page-item {
        margin: 0.15rem;
    }
    
    /* Mobile-specific adjustments */
    @@media (max-width: 767.98px) {
        .btn {
            padding: 0.375rem 0.5rem;
            font-size: 0.875rem;
        }
        
        .input-group > .form-control,
        .input-group > .btn {
            height: calc(1.5em + 0.75rem + 2px);
        }
    }
    
    /* Extra small devices */
    @@media (max-width: 575.98px) {
        .col-12 {
            padding-left: 3rem;
            padding-right: 3rem;
        }
        
        .table th, .table td {
            padding: 0.5rem;
        }
        
        .btn-group > .btn {
            padding: 0.25rem 0.4rem;
        }
    }
</style>